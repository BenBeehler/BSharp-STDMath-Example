nimport io
nimport type
nimport boolean
nimport runtime
nimport boolean
nimport system

var E   = 2.71828182845904523536028747135266249775724709369995957496696763
var PI  = 3.14159265358979323846264338327950288419716939937510582097494459
var PHI = 1.61803398874989484820458683436563811772030917980576286213544862
var SQRT2   = 1.41421356237309504880168872420969807856967187537694807317667974
var SQRTE   = 1.64872127070012814684865078781416357165377610071014801157507931
var SQRTPI  = 1.77245385090551602729816748334114518279754945612238712821380779
var SQRTPHI = 1.27201964951406896425242246173749149171560804184009624861664038
var LN2    = 0.693147180559945309417232121458176568075500134360255254120680009
var LOGE2  = 1 / LN2
var LN10   = 2.30258509299404568401799145468436420760110148862877297603332790
var LOG10E = 1 / LN10

func sqrt(parameter double) {
	var mutable number = parameter
	
	var mutable root = 0.0
	var mutable square = root;
	loop(greater(number, square)) => root = root+1 : square = root * root
	
	return root;
}

func abs(parameter double) {
	var mutable number = parameter
	if(greater(0, number)) => number = -1 * number
	
	return number
}

func square(number double) {
	return number * number
}